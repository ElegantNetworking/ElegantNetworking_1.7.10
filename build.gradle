buildscript {
    repositories {
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            url = 'https://repo.spongepowered.org/maven'
        }
        mavenCentral()
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

apply plugin: 'forge'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'signing'

group 'io.gitlab.hohserg.elegant.networking'

sourceCompatibility = targetCompatibility = '1.8'

version = "3.14"
group = 'io.gitlab.hohserg.elegant.networking'
archivesBaseName = "elegant-networking-${mc_version}"

minecraft.version = forge_version
minecraft.runDir = "run"


repositories {
    mavenCentral()
    maven { url = 'https://maven.minecraftforge.net/' }
    maven {
        name = "chickenbones"
        url = "https://maven.covers1624.net/" //"https://chickenbones.net/maven" //or https://maven.covers1624.net/
    }
}

configurations {
    extraLibs { transitive = false }
}

dependencies {

    if (project.hasProperty("ccl_version"))
        compileOnly "codechicken:CodeChickenLib:${ccl_version}"

    implementation(project(':_ElegantNetworkingCommon')) { transitive = false }
    extraLibs project(':_ElegantNetworkingCommon')

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20', project(':ElegantNetworkingAnnotationProcessor')
}
compileJava {
    options.compilerArgs += [
            '-Aelegantnetworking.printDetails',
            '-Aelegantnetworking.printDebug',
            '-Aelegantnetworking.warningInsteadNote'
    ]
}

jar {
    from {
        configurations.extraLibs.collect { it.isDirectory() ? it : zipTree(it) }
    }
    if (!testBuild) {
        exclude('hohserg/elegant/networking/test/**')
        exclude('META-INF/services/**')
        exclude('tmp_generated/**')
    }
    manifest {
        attributes([
                "Specification-Title"     : "elegant_networking",
                "Specification-Vendor"    : "elegant_networking",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor"   : "elegant_networking",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    exclude('hohserg/elegant/networking/test/**')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    exclude('hohserg/elegant/networking/test/**')
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    repositories {
        maven {
            def localRepo = new File(project.getProjectDir(), 'repo')
            localRepo.deleteDir()

            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            def localRepoUrl = localRepo.getAbsolutePath()

            def usedLocation = releasesRepoUrl
            url = usedLocation

            if (usedLocation != localRepoUrl && project.hasProperty("ossrhUsername")) {
                credentials {
                    username = "$ossrhUsername"
                    password = "$ossrhPassword"
                }
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId "elegant-networking-${mc_version}"
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {
                name = "ElegantNetworking MinecraftForge ${mc_version} library"
                packaging = 'jar'
                description = "This is a runtime library of ElegantNetworking for MinecraftForge ${mc_version}"
                url = 'https://github.com/ElegantNetworking/ElegantNetworkingRoot'

                scm {
                    connection = "scm:git:https://github.com/ElegantNetworking/ElegantNetworking_${mc_version}.git"
                    developerConnection = "scm:git:git@github.com:https://github.com/ElegantNetworking/ElegantNetworking_${mc_version}.git"
                    url = "https://github.com/ElegantNetworking/ElegantNetworking_${mc_version}"
                }

                licenses {
                    license {
                        name = 'GNU Lesser General Public License v3.0'
                        url = "https://raw.githubusercontent.com/ElegantNetworking/ElegantNetworking_${mc_version}/master/LICENSE.md"
                    }
                }

                developers {
                    developer {
                        id = 'hohserg'
                        name = 'hohserg'
                        email = 'hohserg1@yandex.ru'
                    }
                }
            }
        }
    }
}

signing {
    required { project.hasProperty("signing.keyId") }
    sign publishing.publications.mavenJava
}